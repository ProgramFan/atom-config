{
  "_args": [
    [
      {
        "raw": "/private/var/folders/gw/_2jq29095y7b__wtby9dg_5h0000gn/T/d-11681-2191-gmcywi/package.tgz",
        "scope": null,
        "escapedName": null,
        "name": null,
        "rawSpec": "/private/var/folders/gw/_2jq29095y7b__wtby9dg_5h0000gn/T/d-11681-2191-gmcywi/package.tgz",
        "spec": "/private/var/folders/gw/_2jq29095y7b__wtby9dg_5h0000gn/T/d-11681-2191-gmcywi/package.tgz",
        "type": "local"
      },
      "/private/var/folders/gw/_2jq29095y7b__wtby9dg_5h0000gn/T/apm-install-dir-11681-2191-41jynd"
    ]
  ],
  "_from": "../d-11681-2191-gmcywi/package.tgz",
  "_id": "linter-spell@0.11.2",
  "_inCache": true,
  "_installable": true,
  "_location": "/linter-spell",
  "_phantomChildren": {},
  "_requested": {
    "raw": "/private/var/folders/gw/_2jq29095y7b__wtby9dg_5h0000gn/T/d-11681-2191-gmcywi/package.tgz",
    "scope": null,
    "escapedName": null,
    "name": null,
    "rawSpec": "/private/var/folders/gw/_2jq29095y7b__wtby9dg_5h0000gn/T/d-11681-2191-gmcywi/package.tgz",
    "spec": "/private/var/folders/gw/_2jq29095y7b__wtby9dg_5h0000gn/T/d-11681-2191-gmcywi/package.tgz",
    "type": "local"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "file:../d-11681-2191-gmcywi/package.tgz",
  "_shasum": "f8f6ef979100d1d4bd27185011f82d38ba3a16bd",
  "_shrinkwrap": null,
  "_spec": "/private/var/folders/gw/_2jq29095y7b__wtby9dg_5h0000gn/T/d-11681-2191-gmcywi/package.tgz",
  "_where": "/private/var/folders/gw/_2jq29095y7b__wtby9dg_5h0000gn/T/apm-install-dir-11681-2191-41jynd",
  "author": {
    "name": "Tarn Burton",
    "email": "twburton@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/yitzchak/linter-spell/issues"
  },
  "configSchema": {
    "spellPath": {
      "title": "Spell Path",
      "description": "The path to your copy of Ispell compatible program such as aspell, hunspell, etc.",
      "type": "string",
      "default": "hunspell",
      "order": 1
    },
    "defaultLanguages": {
      "title": "Default Languages",
      "description": "Default languages used to check spelling. If not specified will default to the current locale.",
      "type": "array",
      "default": [],
      "order": 2
    },
    "personalDictionaryPath": {
      "title": "Personal Dictionary Path",
      "description": "The path to your personal dictionary.",
      "type": "string",
      "default": "",
      "order": 3
    },
    "checkForSpellCheck": {
      "title": "Check for spell-check package",
      "description": "Check for an active spell-check package and warn user about incompatibility.",
      "type": "boolean",
      "default": true,
      "order": 4
    }
  },
  "consumedServices": {
    "linter-spell-grammar": {
      "versions": {
        "1.0.0": "consumeGrammar"
      }
    },
    "linter-plus-self": {
      "versions": {
        "0.1.0": "consumeLinter"
      }
    },
    "status-bar": {
      "versions": {
        "^1.0.0": "consumeStatusBar"
      }
    }
  },
  "dependencies": {
    "atom-linter": "^7.0.0",
    "atom-package-deps": "^4.0.0",
    "atom-space-pen-views": "^2.2.0",
    "language-tags": "^1.0.0",
    "lodash": "^4.13.0",
    "os-locale": "^1.4.0"
  },
  "description": "Multilingual grammar-specific spell checking using Ispell-interface such as Aspell or Hunspell.",
  "devDependencies": {
    "jsonfile": "^2.3.0",
    "semver": "^5.3.0",
    "xml2js": "^0.4.0"
  },
  "engines": {
    "atom": ">=1.0.0"
  },
  "homepage": "https://github.com/yitzchak/linter-spell#readme",
  "keywords": [
    "linter",
    "spell-check",
    "asciidoc",
    "markdown"
  ],
  "license": "MIT",
  "main": "./lib/main",
  "name": "linter-spell",
  "optionalDependencies": {},
  "package-deps": [
    "linter",
    "intentions"
  ],
  "providedServices": {
    "linter-spell-grammar": {
      "versions": {
        "1.0.0": "provideGrammar"
      }
    },
    "intentions:list": {
      "versions": {
        "1.0.0": "provideIntentions"
      }
    },
    "linter": {
      "versions": {
        "1.0.0": "provideLinter"
      }
    }
  },
  "readme": "# linter-spell\n\n[![Travis&#x2011;CI Build Status](http://img.shields.io/travis/yitzchak/linter-spell/master.svg?label=Linux/OSX%20build)](http://travis-ci.org/yitzchak/linter-spell) [![AppVeyor Build Status](http://img.shields.io/appveyor/ci/yitzchak/linter-spell/master.svg?label=Windows%20build)](http://ci.appveyor.com/project/yitzchak/linter-spell) [![David](http://img.shields.io/david/yitzchak/linter-spell.svg)](http://david-dm.org/yitzchak/linter-spell)\n\nMultilingual grammar-specific spell checking for [Atom](http://atom.io) and\n[linter](http://atom.io/packages/linter) using Ispell compatible interface such\nas [GNU Aspell](http://aspell.net/) or [Hunspell](http://hunspell.github.io/).\n\n## Installing\n\nUse the Atom package manager and search for \"linter-spell\", or from a shell run\n\n```bash\napm install linter-spell\n```\n\n## Prerequisites\n\nThis package relies on a Ispell compatible package such as\n[GNU Aspell](http://aspell.net/) or [Hunspell](http://hunspell.github.io/).\n\n## Usage\n\nSpell checking is done upon document save with misspellings displayed by\n[linter](http://atom.io/packages/linter). Misspellings can be\ncorrected or added to personal dictionary using the\n[intentions](http://atom.io/packages/intentions) package via\n<kbd>ctrl</kbd>+<kbd>enter</kbd> on OSX and <kbd>alt</kbd>+<kbd>enter</kbd> on Linux and Windows.\n\nManual language selection can be done by clicking on the status bar language\nindicator or by using the default keybinding <kbd>alt</kbd>+<kbd>y</kbd> on Linux or\n<kbd>ctrl</kbd>+<kbd>shift</kbd>+<kbd>y</kbd> on other platforms.\n\n## Providers\n\nSpell checking plain text, Markdown, or AsciiDoc documents is included in the\npackage. To spell check other document types use a `linter-spell-grammar`\nprovider:\n\n| Grammar                  | Spell Package                                                                               | Grammar Package                                                                                                                              | File Specific Language              |\n|--------------------------|---------------------------------------------------------------------------------------------|----------------------------------------------------------------------------------------------------------------------------------------------|-------------------------------------|\n| AsciiDoc                 | Included in linter&#x2011;spell                                                             | [language&#x2011;asciidoc](http://atom.io/packages/language-asciidoc)                                                                        | `:lang:` attribute                  |\n| Git Commit Message       | Included in linter&#x2011;spell                                                             | [language&#x2011;git](http://atom.io/packages/language-git)                                                                                  | None                                |\n| GitHub flavored Markdown | Included in linter&#x2011;spell                                                             | [language&#x2011;gfm](http://atom.io/packages/language-gfm)                                                                                  | None                                |\n| HTML                     | [linter&#x2011;spell&#x2011;html](http://atom.io/packages/linter-spell-html)                | [language&#x2011;html](http://atom.io/packages/language-html)                                                                                | `lang` attribute                    |\n| Javascript               | [linter&#x2011;spell&#x2011;javascript](http://atom.io/packages/linter-spell-javascript)    | [language&#x2011;javascript](http://atom.io/packages/language-javascript) or [language&#x2011;babel](http://atom.io/packages/language-babel) | None                                |\n| JSON                     | [linter&#x2011;spell&#x2011;javascript](http://atom.io/packages/linter-spell-javascript)    | [language&#x2011;json](http://atom.io/packages/language-json)                                                                                | None                                |\n| LaTeX, TeX &amp; BibTeX  | [linter&#x2011;spell&#x2011;latex](http://atom.io/packages/linter-spell-latex)              | [language&#x2011;tex](http://atom.io/packages/language-tex) (preferred) or [language&#x2011;latex](http://atom.io/packages/language-latex)   | `%!TeX spellcheck` magic comment    |\n| LaTeX                    | [linter&#x2011;spell&#x2011;latexsimple](https://atom.io/packages/linter-spell-latexsimple) | [language&#x2011;latexsimple](https://atom.io/packages/language-latexsimple)                                                                 | None                                |\n| Markdown                 | Included in linter&#x2011;spell                                                             | [language&#x2011;markdown](http://atom.io/packages/language-markdown)                                                                        | None                                |\n| Plain Text               | Included in linter&#x2011;spell                                                             | [language&#x2011;text](http://atom.io/packages/language-text)                                                                                | None                                |\n| Ruby                     | [linter&#x2011;spell&#x2011;ruby](http://atom.io/packages/linter-spell-ruby)                | [language&#x2011;ruby](http://atom.io/packages/language-ruby)                                                                                | None                                |\n\n## Creating New Providers\n\nNew grammars can be added by implementing a `linter-spell-grammar` provider.\nThis can be done by adding the following to `package.json`\n\n```json\n\"providedServices\": {\n  \"linter-spell-grammar\": {\n    \"versions\": {\n      \"1.0.0\": \"provideGrammar\"\n    }\n  }\n}\n```\n\nThe provided service should be as follows\n\n```javascript\nprovideGrammar () {\n  return [{\n    grammarScopes: ['source.gfm'],\n    findLanguageTags: textEditor => { return ['en-US'] },\n    checkedScopes: {\n      'source.gfm': true,\n      'markup.code.c.gfm': false,\n      'markup.underline.link.gfm': () => atom.config.get('linter-spell.checkLinks')\n    },\n    filterRanges: (textEditor, ranges) => {\n      return {\n        ranges: ranges,\n        ignoredRanges: []\n      }\n    }\n  }]\n}\n```\n\nMultiple grammars can be provided by returning an array. `grammarScopes` is\nrequired, but all other properties and methods are optional.\n\nThe `findLanguageTags` method should scan `textEditor` for a file specific\noverride of the user's default language and return [RFC\n5646](http://www.rfc-editor.org/rfc/rfc5646.txt) compliant language codes or `[]`\nif no language references were found. See\n[linter&#x2011;spell&#x2011;latex](http://atom.io/packages/linter-spell-latex)\nfor an implementation using TeX magic comments.\n\nThe `checkedScopes` list the grammar scopes that either checked or ignored. To\nexplicitly check a scope use a value of `true`, while `false` will ignore that\nscope. To allow dynamic determination of scope spell checking a function may\nalso be supplied. The function should take no arguments and return a truthy\nvalue. If this property is not provided then all scopes in `grammarScopes` will\nbe checked. When it is provided all scopes default to ignored unless specified\nwith a `true` value.\n\nThe `filterRanges` method should check the `ranges` parameter for sub-ranges\nwithin each ranges which are valid to spell check. It should return a list\nof modified ranges in `ranges` and can also return `ignoredRanges` for\nranges that should not be checked. The interval difference between `ranges`\nand `ignoredRanges` will actually be checked.\n\n## Status\n\nPlease note that this package is in a **beta** state.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/yitzchak/linter-spell.git"
  },
  "standard": {
    "parser": "babel-eslint",
    "globals": [
      "atom",
      "latex",
      "afterEach",
      "beforeEach",
      "describe",
      "expect",
      "it",
      "jasmine",
      "runs",
      "spyOn",
      "waitsFor",
      "waitsForPromise",
      "HTMLDivElement"
    ]
  },
  "version": "0.11.2"
}
