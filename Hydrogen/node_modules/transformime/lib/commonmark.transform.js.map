{"version":3,"sources":["../src/commonmark.transform.js"],"names":[],"mappings":"AAAA;;;;;AAEA,IAAI,aAAa,QAAQ,YAAR,CAAjB;;AAEA,IAAI,oBAAoB,YAAU;;;AAG9B,QAAI,SAAS,IAAI,WAAW,MAAf,EAAb;AACA,QAAI,SAAS,IAAI,WAAW,YAAf,CAA4B;AACrC,cAAM;AAD+B,KAA5B,CAAb;;AAIA,WAAO,UAAS,QAAT,EAAmB,IAAnB,EAAyB,QAAzB,EAAmC;AACtC,YAAI,MAAM,SAAS,aAAT,CAAuB,KAAvB,CAAV;;AAEA,YAAI,SAAS,OAAO,KAAP,CAAa,IAAb,CAAb;;;;;AAKA,YAAI,SAAJ,GAAgB,OAAO,MAAP,CAAc,MAAd,CAAhB;;AAEA,eAAO,GAAP;AACH,KAXD;AAYH,CApBuB,EAAxB;;AAsBA,kBAAkB,QAAlB,GAA6B,eAA7B;;QAES,iB,GAAA,iB","file":"commonmark.transform.js","sourcesContent":["\"use strict\"\n\nvar commonmark = require(\"commonmark\")\n\nvar MarkdownTransform = function(){\n    // Stick reader and writer in a closure so they only get created once.\n\n    let reader = new commonmark.Parser()\n    let writer = new commonmark.HtmlRenderer({\n        safe: true\n    })\n\n    return function(mimetype, data, document) {\n        var div = document.createElement(\"div\")\n\n        var parsed = reader.parse(data)\n\n        // TODO: Any other transformations on the parsed object\n        // See https://github.com/jgm/commonmark.js#usage\n\n        div.innerHTML = writer.render(parsed)\n\n        return div\n    }\n}();\n\nMarkdownTransform.mimetype = 'text/markdown'\n\nexport { MarkdownTransform }\n"]}